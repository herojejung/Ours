const categories = <%= raw Category.all.to_json %>;

const buildSubCategoryFields = (name, category_id) => `
  <div class="sub-category-field">
    <input type="text" name="sub_category[][name]" value="${name}" />
    <select name="sub_category[][category_id]">
      ${categories.map(category => `<option value="${category.id}" ${isSelected(category_id, category)}>${category.name}</option>`).join('')}
    </select>
    <button type="button" class="delete-sub-category">削除</button>
  </div>
`;

const initSubCategoryFields = () => {
  subCategories.forEach(subCategory => {
    const [name, category_id] = subCategory.trim().split(':');
    addSubCategoryField(name, category_id);
  });
};

const initSubCategoryFields = () => {
addSubCategoryField(); 
const subCategoryFields = document.querySelectorAll('.sub-category-field');
subCategoryFields.forEach((subCategoryField, index) => {
const nameInput = subCategoryField.querySelector('input[name$="[name][]"]');
const categoryIdInput = subCategoryField.querySelector('select[name$="[category_id][]"]');
nameInput.addEventListener('input', () => {

if (index === subCategoryFields.length - 1 && nameInput.value !== '' && categoryIdInput.value !== '') {
addSubCategoryField();
}
});
});
};

initSubCategoryFields();